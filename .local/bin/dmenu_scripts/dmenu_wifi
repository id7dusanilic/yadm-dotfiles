#!/bin/bash

# This script is used to control wifi state and connections with dmenu

set -euo pipefail
[ -z "${DMENU_COMMAND}" ] && DMENU_COMMAND="dmenu"

select_wifi () {
	ssid=$(nmcli -f ssid,bars,security device wifi list \
			| sed -n '1!p' \
			| ${DMENU_COMMAND} -p "Select Wifi  " -l 20 \
			| sed 's/ \{2,\}/	/g' \
			| cut -f 1)
	# echo $ssid

	[ -z "${ssid}" ] && exit 0

	echo -e "$(active_ssid)" | grep -Fx "${ssid}" && exit 0

	echo -e "$(previously_connected)" | grep -Fx "${ssid}" \
		&& nmcli connection up ${ssid} \
		&& sleep 5 \
		&& wifi_status \
		&& exit 0

	pass=$(echo "" | ${DMENU_COMMAND} -P -p "Enter Password  ")
	# echo $pass

	nmcli device wifi connect "${ssid}" password "${pass}"
	# Wait for 10 seconds and display status
	sleep 10
	wifi_status
}

wifi_status () {
	# This prints out the password with the status message
	# status_msg="$(nmcli device wifi show)" \
	#	|| status_msg="Wifi is turned off"

	# This hides the password
	status_msg="$(nmcli device wifi show | sed -n '3!p')" \
		|| status_msg="Wifi is turned off"

	notify-send "Wifi Status" "${status_msg}"
}

previously_connected () {
	echo -e "$(nmcli -f name connection show | awk '{$1=$1;print}')"
}

active_ssid () {
	echo -e "$(nmcli -f name connection show --active | awk '{$1=$1;print}')"
}

turn_on_prompt="Turn on"
turn_off_prompt="Turn off"
select_prompt="Select"
status_prompt="Print status"
show_password_prompt="Show password"

wifi_on=$(nmcli radio wifi)

[ ${wifi_on} == "enabled" ] \
&&	all_prompts="\
${turn_off_prompt}
${select_prompt}
${status_prompt}
${show_password_prompt}" \
||	all_prompts="\
${turn_on_prompt}
${select_prompt}"

choice=$(echo -e "${all_prompts}" | ${DMENU_COMMAND} -l 5 -p "  Options")

case "$choice" in
	"${turn_on_prompt}")
		nmcli radio wifi on
		;;
	"${turn_off_prompt}")
		nmcli radio wifi off
		;;
	"${select_prompt}")
		select_wifi
		;;
	"${status_prompt}")
		wifi_status
		;;
	"${show_password_prompt}")
		notify-send "Wifi Status" "$(nmcli device wifi show-password)" \
		;;
	*)
		exit 0
		;;
esac
